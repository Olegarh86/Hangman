package hangman;

public enum HangmanState {
    ZERO("Нет такой буквы в этом слове\n" +
            "  ||=========\n" +
            "  ||        |\n" +
            "  ||        |  \n" +
            "  ||       (+L+)\n" +
            "  ||      //| |\\\\  \n" +
            "  ||     // | | \\\\ \n" +
            "  ||        | |   \n" +
            "  ||        |_|  \n" +
            "  ||       // \\\\\n" +
            "  ||    __//   \\\\__\n" +
            "__||_______________\n"),
    ONE("Нет такой буквы в этом слове, у тебя осталась 1 ошибка\n" +
            "  ||=========\n" +
            "  ||        |\n" +
            "  ||        |  \n" +
            "  ||       (>L<)\n" +
            "  ||      //| |\\\\  \n" +
            "  ||     // | | \\\\ \n" +
            "  ||        | |   \n" +
            "  ||        |_|  \n" +
            "  ||       //  \n" +
            "  ||    __//     \n" +
            "__||_______________\n"),
    TWO("Нет такой буквы в этом слове, у тебя осталось 2 ошибки\n" +
            "  ||=========\n" +
            "  ||        |\n" +
            "  ||        |  \n" +
            "  ||       (>L<)\n" +
            "  ||      //| |\\\\  \n" +
            "  ||     // | | \\\\ \n" +
            "  ||        | |   \n" +
            "  ||        |_|  \n" +
            "  ||           \n" +
            "  ||           \n" +
            "__||_______________\n"),
    THREE("Нет такой буквы в этом слове, у тебя осталось 3 ошибки\n" +
            "  ||=========\n" +
            "  ||        |\n" +
            "  ||        |  \n" +
            "  ||       (>L<)\n" +
            "  ||      //| |  \n" +
            "  ||     // | | \n" +
            "  ||        | |   \n" +
            "  ||        |_|  \n" +
            "  ||           \n" +
            "  ||           \n" +
            "__||_______________\n"),
    FOUR("Нет такой буквы в этом слове, у тебя осталось 4 ошибки\n" +
            "  ||=========\n" +
            "  ||        |\n" +
            "  ||        |  \n" +
            "  ||       (>L<)\n" +
            "  ||        | |  \n" +
            "  ||        | | \n" +
            "  ||        | |   \n" +
            "  ||        |_|  \n" +
            "  ||           \n" +
            "  ||           \n" +
            "__||_______________\n"),
    FIVE("Нет такой буквы в этом слове, у тебя осталось 5 ошибок\n" +
            "  ||=========\n" +
            "  ||        |\n" +
            "  ||        |  \n" +
            "  ||       (>L<)\n" +
            "  ||           \n" +
            "  ||           \n" +
            "  ||           \n" +
            "  ||           \n" +
            "  ||           \n" +
            "  ||           \n" +
            "__||_______________\n");

    private final String massage;


    HangmanState(String massage) {
        this.massage = massage;
    }


    @Override
    public String toString() {
        return massage;
    }
}
